import React, { useState, useMemo, useEffect } from "react";
import { Link, useParams } from "react-router-dom";
import { Button, TextInput } from "flowbite-react";
import { FaEdit, FaSearch } from "react-icons/fa";
import { useStores } from "../context/root-store-context";
import { observer } from "mobx-react-lite";

const fieldDictionary: Record<string, string> = {
  inn: "–ò–ù–ù",
  orgName: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
  orgFullName: "–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
  status: "–°—Ç–∞—Ç—É—Å",
  legalAddress: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å",
  productionAddress: "–ê–¥—Ä–µ—Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
  additionalSiteAddress: "–ê–¥—Ä–µ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–∏",
  industry: "–û—Å–Ω–æ–≤–Ω–∞—è –æ—Ç—Ä–∞—Å–ª—å",
  subIndustry: "–ü–æ–¥–æ—Ç—Ä–∞—Å–ª—å (–û—Å–Ω–æ–≤–Ω–∞—è)",
  mainOkved: "–û—Å–Ω–æ–≤–Ω–æ–π –û–ö–í–≠–î",
  mainOkvedActivity: "–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –û–ö–í–≠–î",
  productionOkved: "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –û–ö–í–≠–î",
  registrationDate: "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
  head: "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å",
  parentOrgName: "–ì–æ–ª–æ–≤–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
  parentOrgInn: "–ò–ù–ù –≥–æ–ª–æ–≤–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
  managementContacts: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞",
  orgContact: "–ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
  emergencyContact: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ –ß–°",
  website: "–°–∞–π—Ç",
  email: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞",
  supportMeasures: "–ú–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
  specialStatus: "–ù–∞–ª–∏—á–∏–µ –æ—Å–æ–±–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞",
  smeStatus: "–°—Ç–∞—Ç—É—Å –ú–°–ü",

  // –§–∏–Ω–∞–Ω—Å—ã
  revenue2022: "–í—ã—Ä—É—á–∫–∞, —Ç—ã—Å. —Ä—É–±. (2022)",
  revenue2023: "–í—ã—Ä—É—á–∫–∞, —Ç—ã—Å. —Ä—É–±. (2023)",
  revenue2024: "–í—ã—Ä—É—á–∫–∞, —Ç—ã—Å. —Ä—É–±. (2024)",
  profit2022: "–ü—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2022)",
  profit2023: "–ü—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2023)",
  profit2024: "–ü—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2024)",

  // –ü–µ—Ä—Å–æ–Ω–∞–ª
  staffTotal2022: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–≤—Å–µ–≥–æ) 2022",
  staffTotal2023: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–≤—Å–µ–≥–æ) 2023",
  staffTotal2024: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (–≤—Å–µ–≥–æ) 2024",
  staffMoscow2022: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –≤ –ú–æ—Å–∫–≤–µ 2022",
  staffMoscow2023: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –≤ –ú–æ—Å–∫–≤–µ 2023",
  staffMoscow2024: "–ß–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç—å –≤ –ú–æ—Å–∫–≤–µ 2024",

  // –§–û–¢
  payrollTotal2022: "–§–û–¢ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ç—ã—Å. —Ä—É–±. (2022)",
  payrollTotal2023: "–§–û–¢ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ç—ã—Å. —Ä—É–±. (2023)",
  payrollTotal2024: "–§–û–¢ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —Ç—ã—Å. —Ä—É–±. (2024)",
  payrollMoscow2022: "–§–û–¢ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ú–æ—Å–∫–≤—ã, —Ç—ã—Å. —Ä—É–±. (2022)",
  payrollMoscow2023: "–§–û–¢ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ú–æ—Å–∫–≤—ã, —Ç—ã—Å. —Ä—É–±. (2023)",
  payrollMoscow2024: "–§–û–¢ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ú–æ—Å–∫–≤—ã, —Ç—ã—Å. —Ä—É–±. (2024)",

  // –°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞
  avgSalaryTotal2022: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞, —Ç—ã—Å. —Ä—É–±. (2022)",
  avgSalaryTotal2023: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞, —Ç—ã—Å. —Ä—É–±. (2023)",
  avgSalaryTotal2024: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞, —Ç—ã—Å. —Ä—É–±. (2024)",
  avgSalaryMoscow2022: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ (–ú–æ—Å–∫–≤–∞) 2022",
  avgSalaryMoscow2023: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ (–ú–æ—Å–∫–≤–∞) 2023",
  avgSalaryMoscow2024: "–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ (–ú–æ—Å–∫–≤–∞) 2024",

  // –ù–∞–ª–æ–≥–∏
  taxTotal2022: "–ù–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxTotal2023: "–ù–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxTotal2024: "–ù–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxProfit2022: "–ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxProfit2023: "–ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxProfit2024: "–ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxProperty2022: "–ù–∞–ª–æ–≥ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxProperty2023: "–ù–∞–ª–æ–≥ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxProperty2024: "–ù–∞–ª–æ–≥ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxLand2022: "–ù–∞–ª–æ–≥ –Ω–∞ –∑–µ–º–ª—é, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxLand2023: "–ù–∞–ª–æ–≥ –Ω–∞ –∑–µ–º–ª—é, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxLand2024: "–ù–∞–ª–æ–≥ –Ω–∞ –∑–µ–º–ª—é, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxNdfl2022: "–ù–î–§–õ, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxNdfl2023: "–ù–î–§–õ, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxNdfl2024: "–ù–î–§–õ, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxTransport2022: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –Ω–∞–ª–æ–≥, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxTransport2023: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –Ω–∞–ª–æ–≥, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxTransport2024: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –Ω–∞–ª–æ–≥, —Ç—ã—Å. —Ä—É–±. (2024)",
  taxOther2022: "–ü—Ä–æ—á–∏–µ –Ω–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2022)",
  taxOther2023: "–ü—Ä–æ—á–∏–µ –Ω–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2023)",
  taxOther2024: "–ü—Ä–æ—á–∏–µ –Ω–∞–ª–æ–≥–∏, —Ç—ã—Å. —Ä—É–±. (2024)",

  // –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ —ç–∫—Å–ø–æ—Ä—Ç
  excise2022: "–ê–∫—Ü–∏–∑—ã, —Ç—ã—Å. —Ä—É–±. (2022)",
  excise2023: "–ê–∫—Ü–∏–∑—ã, —Ç—ã—Å. —Ä—É–±. (2023)",
  excise2024: "–ê–∫—Ü–∏–∑—ã, —Ç—ã—Å. —Ä—É–±. (2024)",
  investMoscow2022: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –ú–æ—Å–∫–≤—É, —Ç—ã—Å. —Ä—É–±. (2022)",
  investMoscow2023: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –ú–æ—Å–∫–≤—É, —Ç—ã—Å. —Ä—É–±. (2023)",
  investMoscow2024: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –ú–æ—Å–∫–≤—É, —Ç—ã—Å. —Ä—É–±. (2024)",
  export2022: "–≠–∫—Å–ø–æ—Ä—Ç, —Ç—ã—Å. —Ä—É–±. (2022)",
  export2023: "–≠–∫—Å–ø–æ—Ä—Ç, —Ç—ã—Å. —Ä—É–±. (2023)",
  export2024: "–≠–∫—Å–ø–æ—Ä—Ç, —Ç—ã—Å. —Ä—É–±. (2024)",
  hasExport: "–ù–∞–ª–∏—á–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∞",
  exportPrevYear: "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥–æ–¥, —Ç—ã—Å. —Ä—É–±.",
  exportCountries: "–°—Ç—Ä–∞–Ω—ã-–∏–º–ø–æ—Ä—Ç—ë—Ä—ã",
  // –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
  landCadastral: "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä –ó–£",
  landArea: "–ü–ª–æ—â–∞–¥—å –ó–£, –º¬≤",
  landUse: "–í–∏–¥ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ó–£",
  landOwnership: "–§–æ—Ä–º–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ó–£",
  landOwner: "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –ó–£",
  oksCadastral: "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä –û–ö–°–∞",
  oksArea: "–ü–ª–æ—â–∞–¥—å –û–ö–°–æ–≤, –º¬≤",
  oksUse: "–í–∏–¥ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –û–ö–°–æ–≤",
  oksType: "–¢–∏–ø —Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —Ü–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
  oksOwnership: "–§–æ—Ä–º–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –û–ö–°–æ–≤",
  oksOwner: "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫ –û–ö–°–æ–≤",
  productionArea: "–ü–ª–æ—â–∞–¥—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π, –º¬≤",

  // –ü—Ä–æ–¥—É–∫—Ü–∏—è
  standardizedProduct: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è",
  productNames: "–ù–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
  productOkpd2: "–ö–æ–¥—ã –û–ö–ü–î 2",
  productSegments: "–¢–∏–ø—ã –∏ —Å–µ–≥–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
  productCatalog: "–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
  hasGovOrder: "–ù–∞–ª–∏—á–∏–µ –≥–æ—Å–∑–∞–∫–∞–∑–∞",
  capacityUtilization: "–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π",

  // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  legalCoords: "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —é—Ä. –∞–¥—Ä–µ—Å–∞",
  productionCoords: "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
  additionalCoords: "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–æ–ø. –ø–ª–æ—â–∞–¥–∫–∏",
  latitude: "–®–∏—Ä–æ—Ç–∞",
  longitude: "–î–æ–ª–≥–æ—Ç–∞",

  // –ì–µ–æ–≥—Ä–∞—Ñ–∏—è
  okrug: "–û–∫—Ä—É–≥",
  district: "–†–∞–π–æ–Ω",
};

const CompanyInfo: React.FC = () => {
  const { inn } = useParams<{ inn: string }>();
  const {
    company: { currentCompany, getCompanyByInn, updateCompanyField },
  } = useStores();

  const [editingField, setEditingField] = useState<string | null>(null);
  const [tempValue, setTempValue] = useState("");
  const [searchQuery, setSearchQuery] = useState("");

  useEffect(() => {
    if (inn) getCompanyByInn(inn);
  }, [inn, getCompanyByInn]);

  const handleCancel = () => setEditingField(null);

  const handleEdit = (key: string, value: string) => {
    setEditingField(key);
    setTempValue(value);
  };

  const handleSave = async (key: string) => {
    if (!inn) return;
    await updateCompanyField(inn, key, tempValue);
    setEditingField(null);
  };

  const filteredData = useMemo(() => {
    if (!currentCompany) return [];
    const entries = Object.entries(currentCompany);
    if (!searchQuery.trim()) return entries;

    const query = searchQuery.toLowerCase();

    return entries.filter(([key, value]) => {
      const translatedKey = fieldDictionary[key]?.toLowerCase() || key.toLowerCase();
      const stringValue = String(value ?? "").toLowerCase();

      return translatedKey.includes(query) || stringValue.includes(query);
    });
  }, [currentCompany, searchQuery]);

  if (!currentCompany || !Object.keys(currentCompany).length)
    return (
      <div className="min-h-screen flex items-center justify-center text-gray-500 text-lg">
        –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...
      </div>
    );

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
        <h1 className="text-3xl font-bold text-gray-800 text-center sm:text-left">
          –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ ‚Äî{" "}
          <span className="text-blue-600">{currentCompany.orgName}</span>
        </h1>

        <div className="flex gap-3">
          <Link to="/analytics">
            <Button color="blue" className="hover:scale-105 transition">
              üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
            </Button>
          </Link>
          <Link to="/graph">
            <Button color="purple" className="hover:scale-105 transition">
              üîó –ì—Ä–∞—Ñ
            </Button>
          </Link>
          <Link to="/companies">
            <Button color="light" className="hover:scale-105 transition">
              ‚Üê –ù–∞–∑–∞–¥
            </Button>
          </Link>
        </div>
      </div>

      {/* –ü–æ–∏—Å–∫ */}
      <div className="flex items-center gap-3 mb-6">
        <FaSearch className="text-gray-500" />
        <TextInput
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –¥–∞–Ω–Ω—ã–º –∫–æ–º–ø–∞–Ω–∏–∏..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-96"
        />
        {searchQuery && (
          <Button color="gray" size="sm" onClick={() => setSearchQuery("")}>
            –û—á–∏—Å—Ç–∏—Ç—å
          </Button>
        )}
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö */}
      <div className="bg-white rounded-xl shadow-md p-6">
        <div className="divide-y divide-gray-200">
          {filteredData.map(([key, value]) => (
            <div
              key={key}
              className="flex flex-col sm:flex-row sm:justify-between items-start sm:items-center py-3"
            >
              <span className="font-medium text-gray-600 sm:w-1/3">
                {fieldDictionary[key] ?? key}
              </span>

              <div className="flex flex-col sm:flex-row sm:items-center gap-3 sm:w-2/3 mt-2 sm:mt-0">
                {editingField === key ? (
                  <>
                    <TextInput
                      value={tempValue}
                      onChange={(e) => setTempValue(e.target.value)}
                      className="flex-1"
                    />
                    <div className="flex gap-2">
                      <Button
                        color="success"
                        size="sm"
                        onClick={() => handleSave(key)}
                      >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </Button>
                      <Button color="gray" size="sm" onClick={handleCancel}>
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                    </div>
                  </>
                ) : (
                  <>
                    <span className="text-gray-800 break-words">
                      {value ?? "-"}
                    </span>
                    <button
                      className="text-gray-400 hover:text-blue-500 transition ml-2"
                      onClick={() => handleEdit(key, String(value))}
                      title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                    >
                      <FaEdit size={18} />
                    </button>
                  </>
                )}
              </div>
            </div>
          ))}
          {filteredData.length === 0 && (
            <p className="text-center text-gray-500 py-6">
              –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É ¬´{searchQuery}¬ª
            </p>
          )}
        </div>
      </div>
    </div>
  );
};

export default observer(CompanyInfo);
